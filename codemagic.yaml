workflows:
  android_ios_release:
    name: Android & iOS Release
    max_build_duration: 120
    instance_type: mac_mini_m2

    environment:
      flutter: stable
      xcode: latest
      # Подтягиваем переменные из группы в Codemagic → Environment variables
      groups:
        - android_secrets
        - ios_secrets
        - backend

    cache:
      cache_paths:
        - ~/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - android/.gradle
        - ~/.gradle/caches
        - ~/.gradle/wrapper

    scripts:
      - name: Print versions
        script: |
          flutter --version
          java -version || true
          echo "Gradle wrapper: $(grep distributionUrl android/gradle/wrapper/gradle-wrapper.properties || true)"

      - name: Restore Firebase & signing files
        script: |
          set -e
          mkdir -p android/app
          mkdir -p ios/Runner

          # --- Keystore (Android) ---
          if [ -n "$CM_KEYSTORE" ]; then
            python3 - <<'PY'
import os, base64
b = os.environ.get("CM_KEYSTORE","").strip()
open("android/app/onde-release.keystore","wb").write(base64.b64decode(b))
print("Keystore restored")
PY
          fi

          # --- google-services.json (Android) ---
          if [ -n "$CM_GOOGLE_SERVICES_JSON" ]; then
            python3 - <<'PY'
import os, base64
b = os.environ.get("CM_GOOGLE_SERVICES_JSON","").strip()
open("android/app/google-services.json","wb").write(base64.b64decode(b))
print("google-services.json restored")
PY
            echo "android/app/google-services.json size: $(wc -c < android/app/google-services.json) bytes"
          fi

          # --- GoogleService-Info.plist (iOS) ---
          if [ -n "$CM_GOOGLESERVICE_INFO_PLIST" ]; then
            python3 - <<'PY'
import os, base64
b = os.environ.get("CM_GOOGLESERVICE_INFO_PLIST","").strip()
open("ios/Runner/GoogleService-Info.plist","wb").write(base64.b64decode(b))
print("GoogleService-Info.plist restored")
PY
            echo "ios/Runner/GoogleService-Info.plist size: $(wc -c < ios/Runner/GoogleService-Info.plist) bytes"
          fi

          # --- key.properties (Android signing) ---
          if [ -n "$CM_KEY_ALIAS" ] && [ -n "$CM_KEY_PASSWORD" ] && [ -n "$CM_KEYSTORE_PASSWORD" ]; then
            cat > android/key.properties <<EOF
storePassword=$CM_KEYSTORE_PASSWORD
keyPassword=$CM_KEY_PASSWORD
keyAlias=$CM_KEY_ALIAS
storeFile=onde-release.keystore
EOF
            echo "android/key.properties written"
          else
            echo "Signing env vars missing, Android build will be unsigned."
          fi

      - name: Flutter pub get
        script: |
          flutter pub get

      - name: Build Android AAB
        script: |
          # гарантируем наличие wrapper’a, чтобы у Codemagic не было конфликтов версий
          (cd android && ./gradlew --no-daemon wrapper) || true
          flutter build appbundle --release --target-platform android-arm,android-arm64,android-x64
        artifacts:
          - build/app/outputs/bundle/release/*.aab
          - android/app/build/outputs/mapping/release/mapping.txt

      - name: Build iOS IPA (no codesign)
        script: |
          flutter build ipa --release --no-codesign
        artifacts:
          - build/ios/ipa/*.ipa

    publishing:
      scripts:
        - echo "Build finished ✅"